name: "CI"

env:
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  MNEMONIC: ${{ secrets.MNEMONIC }}
  POLYGON_PK: ${{ secrets.POLYGON_PK }}
  GOERLI_PK: ${{ secrets.GOERLI_PK }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  ci:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          cache: "yarn"
          node-version: "16"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "Install the dependencies"
        run: "yarn install --immutable"

      # - name: "Lint the code"
      #   run: "yarn lint"

      # - name: "Add lint summary"
      #   run: |
      #     echo "## Lint results" >> $GITHUB_STEP_SUMMARY
      #     echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

      - name: "Compile the contracts and generate the TypeChain bindings"
        run: "yarn typechain"

      - name: "Test the contracts and generate the coverage report"
        run: "yarn coverage"

      - name: "Add test summary"
        run: |
          echo "## Test results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
