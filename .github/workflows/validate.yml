name: "VALIDATE"

env:
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  MNEMONIC: ${{ secrets.MNEMONIC }}
  POLYGON_PK: ${{ secrets.POLYGON_PK }}
  GOERLI_PK: ${{ secrets.GOERLI_PK }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
  ARBISCAN_API_KEY: ${{ secrets.ARBISCAN_API_KEY }}
  SENDER_PK: ${{ secrets.SENDER_PK }}
  VERIFIER_PK: ${{ secrets.VERIFIER_PK }}
  RECIPIENT_PK: ${{ secrets.RECIPIENT_PK }}

  CONTEXT: github

on:
  workflow_dispatch:
    inputs:
      fromChains:
        description: 'Comma separated from chains e.g. polygon,arbitrum'
        required: true
        default: 'ALL'
        type: string
      toChains:
        description: 'Comma separated recipient chains e.g. polygon,arbitrum'
        required: true
        default: 'ALL'
        type: string
      amount:
        description: 'The amount to be sent'
        default: 0.5
        required: true
        type: number

jobs:
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "From Chains: $FROM_CHAINS"
          echo "To Chains: $TO_CHAINS"
          echo "Amount: $AMOUNT"
        env:
          FROM_CHAINS: ${{ inputs.fromChains }}
          TO_CHAINS: ${{ inputs.toChains }}
          AMOUNT: ${{ inputs.amount }}
  ci:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          cache: "yarn"
          node-version: "16"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "Install the dependencies"
        run: "yarn install --immutable"

      - name: "Validate"
        run: "yarn integration"
        env:
          FROM_CHAINS: ${{ inputs.fromChains }}
          TO_CHAINS: ${{ inputs.toChains }}
          AMOUNT: ${{ inputs.amount }}

      - name: "Add test summary"
        run: |
          echo "## Test results" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Passed" >> $GITHUB_STEP_SUMMARY
